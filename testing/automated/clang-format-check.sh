#!/bin/bash

echo "running clang format. pwd: $(pwd)"

# way too counter productive
# clang-format is not consistent across versions, even with .clang-format
# not going to do massive refactors just because

file_list=(
device/asgard_glkronmult_cpu.cpp
device/asgard_glkronmult_bcpu.cpp
device/asgard_preconditioner_gpu.cpp
device/asgard_kronmult_common.hpp
device/asgard_kronmult.cpp
device/asgard_kronmult_cpu.cpp
device/asgard_kronmult_cpu_general.hpp
device/asgard_kronmult_cycle1.hpp
device/asgard_kronmult_cycle2.hpp
device/asgard_kronmult_cyclex.hpp
device/asgard_kronmult.hpp
device/asgard_spkronmult.cpp
device/asgard_spkronmult_cpu.cpp
device/asgard_spkronmult_cpu_general.hpp
device/asgard_spkronmult_cycle1.hpp
device/asgard_spkronmult_cycle2.hpp
device/asgard_spkronmult_cyclex.hpp
#pde/asgard_pde_advection1.hpp
#pde/asgard_pde_base.hpp
pde/asgard_pde_collisional_landau_1x2v.hpp
#pde/asgard_pde_collisional_landau_1x3v.hpp
pde/asgard_pde_collisional_landau.hpp
pde/asgard_pde_continuity1.hpp
#pde/asgard_pde_continuity2.hpp
#pde/asgard_pde_continuity3.hpp
#pde/asgard_pde_continuity6.hpp
#pde/asgard_pde_diffusion1.hpp
pde/asgard_pde_diffusion2.hpp
pde/asgard_pde_fokkerplanck1_4p3.hpp
pde/asgard_pde_fokkerplanck1_4p4.hpp
pde/asgard_pde_fokkerplanck1_4p5.hpp
#pde/asgard_pde_fokkerplanck1_pitch_C.hpp
pde/asgard_pde_fokkerplanck1_pitch_E.hpp
pde/asgard_pde_fokkerplanck2_complete.hpp
pde/asgard_pde_relaxation_1x1v.hpp
pde/asgard_pde_relaxation_1x2v.hpp
#pde/asgard_pde_relaxation_1x3v.hpp
pde/asgard_pde_riemann_1x2v.hpp
#pde/asgard_pde_riemann_1x3v.hpp
pde/asgard_pde_two_stream.hpp
pde/asgard_pde_vlasov_lb_full_f.hpp
#asgard_adapt.cpp
asgard_adapt.hpp
asgard_adapt_tests.cpp
asgard_grid_1d.hpp
asgard_indexset.cpp
asgard_indexset.hpp
asgard_indexset_tests.cpp
asgard_interpolation1d.hpp
asgard_interpolation1d.cpp
asgard_interptest_common.hpp
#asgard_interpolation1d_tests.cpp
asgard_interpolation.hpp
#asgard_interpolation_tests.cpp
asgard_kron_operators.hpp
asgard_kronmult_benchmark.cpp
asgard_kronmult_matrix.cpp
asgard_kronmult_matrix.hpp
asgard_kronmult_matrix_tests.cpp
asgard_kronmult_tests.hpp
asgard_matrix.hpp
asgard_mpi.hpp
asgard_pde.hpp
asgard_resources_cuda.tpp
asgard_resources_host.tpp
asgard_resources.hpp
asgard_resources_tests.cpp
#asgard_testpdes_interpolation.hpp
asgard_time_advance.cpp
asgard_time_advance.hpp
asgard_time_advance_tests.cpp
asgard_tools.cpp
asgard_tools.hpp
asgard_tools_tests.cpp
asgard_vector.hpp
#asgard_basis.cpp
asgard_basis.hpp
#asgard_basis_tests.cpp
asgard_batch.cpp
#asgard_batch.hpp
#asgard_batch_tests.cpp
asgard_boundary_conditions.cpp
asgard_boundary_conditions.hpp
asgard_boundary_conditions_tests.cpp
asgard_cblacs_grid.cpp
asgard_cblacs_grid.hpp
asgard_cblacs_grid_tests.cpp
asgard_coefficients.cpp
asgard_coefficients.hpp
#asgard_coefficients_tests.cpp
#asgard_distribution.cpp
asgard_distribution.hpp
#asgard_distribution_tests.cpp
#asgard_elements.cpp
asgard_elements.hpp
#asgard_elements_tests.cpp
asgard_fast_math.hpp
#asgard_fast_math_tests.cpp
asgard_io.hpp
asgard_io_tests.cpp
#asgard_lib_dispatch.cpp
asgard_lib_dispatch.hpp
#asgard_lib_dispatch_tests.cpp
main.cpp
asgard_matlab_utilities.cpp
asgard_matlab_utilities.hpp
asgard_matlab_utilities_tests.cpp
#asgard_moment.cpp
asgard_moment.hpp
asgard_moment_tests.cpp
#asgard_pde_tests.cpp
asgard_permutations.cpp
asgard_permutations.hpp
asgard_permutations_tests.cpp
#asgard_program_options.cpp
#asgard_program_options.hpp
#asgard_program_options_tests.cpp
asgard_quadrature.cpp
asgard_quadrature.hpp
asgard_quadrature_tests.cpp
asgard_scalapack_matrix_info.cpp
asgard_scalapack_matrix_info.hpp
asgard_scalapack_matrix_info_tests.cpp
asgard_scalapack_vector_info.hpp
asgard_scalapack_vector_info_tests.cpp
#asgard_solver.cpp
asgard_solver.hpp
asgard_solver_tests.cpp
asgard_sparse.hpp
asgard_sparse_tests.cpp
asgard_tensors.hpp
#asgard_tensors_tests.cpp
#asgard_transformations.cpp
#asgard_transformations.hpp
#asgard_transformations_tests.cpp
)

# clang-format should not be applied to non-C++ files
# build_info.hpp.in is configured by CMake and has non C++ syntax
# for file in $(find src -type f ! -iname "build_info.hpp.in")
#for file in ${file_list[@]}
#do
#  echo ./src/${file}
#  diff ./src/${file} <(clang-format-12 ./src/${file}) || exit 1;
#done
